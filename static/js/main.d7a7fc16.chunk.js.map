{"version":3,"sources":["component/skill-card.tsx","component/schedule-caroussel.tsx","component/level-list.tsx","page/level-page.tsx","component/exercice-modal.tsx","page/skill-page.tsx","service/service-api.ts","service/database-service.ts","index.tsx"],"names":["SkillCard","React","render","this","props","id","to","className","header","alt","src","image","title","name","shape","responsiveOptions","breakpoint","numVisible","numScroll","SubjectCaroussel","circular","value","skills","itemTemplate","skill","subject_id","description","exercices","premium","LevelList","subjects","map","s","key","LevelPage","constructor","super","state","componentDidMount","database","getSubjects","then","setState","ExericeModal","prop","started","step","done","time","success","getContent","exercice","answer","getQuestion","getNbStep","questions","length","result","i","getResponses","finish","onFinish","Date","now","date","exercice_id","start","nextStep","close","getFooter","label","icon","onClick","autoFocus","index","visible","style","width","footer","onHide","SkillPage","window","location","href","split","pop","getSkill","getVideoId","link","addResult","videoId","video","layout","dangerouslySetInnerHTML","__html","exo","ServiceAPI","getSubject","Promise","resolve","reject","fetch","response","json","regexp","RegExp","Map","has","chapitre","ID","set","post_title","push","skill_id","enonce","correction","tip","nom","content","rendered","difficulty","difficulte","thumbnail","guid","order","ordering","get","Array","from","values","DatabaseService","api","db","Dexie","DB_NAME","version","stores","results","isCreated","exists","table","add","toArray","getExercice","initialize","forEach","bulkPut","App","databaseLoaded","path","rootElement","document","getElementById"],"mappings":"sRAOA,MAAMA,UAAkBC,YAEbC,SACH,OAAKC,KAAKC,MAAMC,GASZ,gBAAC,IAAD,CAAMC,GAAE,iBAAYH,KAAKC,MAAMC,KAC3B,gBAAC,OAAD,CAAME,UAAU,gBACZC,OAAQ,uBAAKC,IAAI,OAAOC,IAAKP,KAAKC,MAAMO,QACxCC,MAAOT,KAAKC,MAAMS,QAVtB,gBAAC,OAAD,CAAMN,UAAU,iBACZ,yBAAG,gBAAC,WAAD,CAAUO,MAAM,eACnB,yBAAG,gBAAC,WAAD,CAAUA,MAAM,iBAgBxBd,QCvBf,MAAMe,EAAoB,CACtB,CACIC,WAAY,SACZC,WAAY,EACZC,UAAW,GAEf,CACIF,WAAY,QACZC,WAAY,EACZC,UAAW,GAEf,CACIF,WAAY,QACZC,WAAY,EACZC,UAAW,IAGnB,MAAMC,UAAyBlB,YAEpBC,SACH,OACI,uBAAKK,UAAU,QACX,0BAAKJ,KAAKC,MAAMS,MAChB,gBAAC,WAAD,CACIE,kBAAmBA,EACnBE,WAAY,EACZC,UAAW,EACXE,UAAU,EACVC,MAAOlB,KAAKC,MAAMkB,OAClBC,aAAeC,GAAiB,gBAAC,EAAD,CAAWnB,GAAImB,EAAMnB,GAAIoB,WAAYD,EAAMC,WAAYZ,KAAMW,EAAMX,KAAMa,YAAaF,EAAME,YAAaC,UAAWH,EAAMG,UAAWhB,MAAOa,EAAMb,MAAOiB,QAASJ,EAAMI,cAO7MT,QCtCf,MAAMU,UAAkB5B,YAEbC,SACH,OACI,uBAAKK,UAAU,uBACX,0BAAKJ,KAAKC,MAAMS,MAChB,0BAAKV,KAAKC,MAAMsB,aAChB,uBAAKnB,UAAU,IAEPJ,KAAKC,MAAM0B,SAASC,IAAIC,GAAK,gBAAC,EAAD,CACzBC,IAAKD,EAAE3B,GACPA,GAAI2B,EAAE3B,GACNQ,KAAMmB,EAAEnB,KACRa,YAAaM,EAAEN,YACfJ,OAAQU,EAAEV,aASvBO,QCjBf,MAAMK,UAAkBjC,YAEpBkC,YAAY/B,GACRgC,MAAMhC,GACND,KAAKkC,MAAQ,CACTP,SAAU,IAIXQ,oBACHnC,KAAKC,MAAMmC,SAASC,cAAcC,KAAMX,IACpC3B,KAAKuC,SAAS,CACVZ,eAKL5B,SACH,OACI,uBAAKK,UAAU,QACX,iCACA,gBAAC,EAAD,CAAWF,GAAG,IAAIqB,YAAY,GAC1Bb,KAAK,cAAWiB,SAAU3B,KAAKkC,MAAMP,aAM1CI,Q,gCC7Bf,MAAMS,UAAqB1C,YAEvBkC,YAAYS,GACRR,MAAMQ,GACNzC,KAAKkC,MAAQ,CACTQ,SAAS,EACTC,KAAM,EACNC,MAAM,EACNC,KAAM,EACNC,SAAS,GAIVC,aACH,OAAI/C,KAAKkC,MAAMU,KACJ5C,KAAKC,MAAM+C,SAASC,OAExBjD,KAAKkD,cAGTC,YACH,OAAOnD,KAAKC,MAAM+C,SAASI,UAAUC,OAAS,EAG3CH,cACH,IAAII,EAAStD,KAAKC,MAAM+C,SAASI,UAAU,GAC3C,IAAK,IAAIG,EAAI,EAAGA,GAAKvD,KAAKkC,MAAMS,KAAMY,GAAK,EACvCD,GAAU,OAAStD,KAAKC,MAAM+C,SAASI,UAAUG,GAErD,OAAOD,EAGJE,eACH,MAAO,CAAC,YAAa,YAAa,YAAa,aAG5CC,SACHzD,KAAKC,MAAMyD,SAAS,CAChBxD,GAAIyD,KAAKC,MACTd,SAAS,EACTe,KAAMF,KAAKC,MACXE,YAAa9D,KAAKC,MAAM+C,SAAS9C,GACjC2C,KAAMc,KAAKC,MAAQ5D,KAAKkC,MAAMW,OAElC7C,KAAKuC,SAAS,CACVK,MAAM,EACNE,SAAS,IAIViB,QACH/D,KAAKuC,SAAS,CACVG,SAAS,EACTG,KAAMc,KAAKC,QAIZI,WACChE,KAAKkC,MAAMS,OAAS3C,KAAKmD,YACzBnD,KAAKyD,SAELzD,KAAKuC,SAAS,CACVI,KAAM3C,KAAKkC,MAAMS,KAAO,IAK7BsB,QACHjE,KAAKuC,SAAS,CACVK,MAAM,EACND,KAAM,EACND,SAAS,IAIVwB,YACH,OAAKlE,KAAKkC,MAAMU,KAST,2BACH,gBAAC,SAAD,CAAQuB,MAAM,gBAAgBC,KAAK,cAAcC,QAAS,IAAMrE,KAAKiE,QAASK,WAAS,KAThF,2BAECtE,KAAKwD,eAAe5B,IAAI,CAACV,EAAOqD,IAC5B,gBAAC,SAAD,CAAQzC,IAAKyC,EAAOJ,MAAOjD,EAAOmD,QAAS,IAAMrE,KAAKgE,WAAY5D,UAAU,oBAUzFL,SACH,OACI,uBAAKK,UAAU,QACX,gBAAC,SAAD,CAAQ+D,MAAOnE,KAAKC,MAAM+C,SAAStC,KAAM0D,KAAK,sBAAsBC,QAAS,IAAMrE,KAAK+D,UACxF,gBAAC,SAAD,CAAQ1D,OAAQL,KAAKC,MAAM+C,SAAStC,KAAM8D,QAASxE,KAAKkC,MAAMQ,QAAS+B,MAAO,CAAEC,MAAO,QAAUC,OAAQ3E,KAAKkE,YAAaU,OAAQ,IAAM5E,KAAKiE,SAC1I,gBAAC,IAAD,KAAQjE,KAAK+C,iBAQlBP,Q,gBCnGf,MAAMqC,UAAkB/E,YAEpBkC,YAAYS,GACRR,MAAMQ,GACNzC,KAAKkC,MAAQ,CACTb,MAAO,CACHnB,GAAI,GACJQ,KAAM,GACNa,YAAa,GACbD,WAAY,GACZE,UAAW,KAMhBW,oBACH,IAAIjC,IAAO4E,OAAOC,SAASC,KAAKC,MAAM,KAAKC,OAAS,QACpDlF,KAAKC,MAAMmC,SAAS+C,SAASjF,GAAIoC,KAAMjB,IACnCrB,KAAKuC,SAAS,CACVlB,YAKL+D,WAAWC,GACd,OAAIA,EACOA,EAAKJ,MAAM,KAAKC,MAEpB,GAGJI,UAAUhC,GACbtD,KAAKC,MAAMmC,SAASkD,UAAUhC,GAG3BvD,SAAU,IAAD,EACZ,OACI,uBAAKK,UAAU,QACX,oCAAKJ,KAAKkC,MAAMb,aAAhB,aAAK,EAAkBX,MACvB,uBAAKN,UAAU,YACX,gBAAC,IAAD,CACImF,QAASvF,KAAKoF,WAAWpF,KAAKkC,MAAMb,MAAMmE,SAG9C,gBAAC,UAAD,CAASC,OAAO,aAChB,uBACIC,wBAAyB,CACrBC,OAAQ3F,KAAKkC,MAAMb,MAAME,gBAGrC,sCAEIvB,KAAKkC,MAAMb,MAAMG,UAAUI,IAAI,CAACgE,EAAK1E,IACjC,gBAAC,EAAD,CAAcY,IAAKZ,EAAO8B,SAAU4C,EAAKlC,SAAWJ,GAAoBtD,KAAKsF,UAAUhC,QAQhGuB,Q,QClBAgB,MApDf,MAEWC,aACH,OAAO,IAAIC,QAAQ,CAACC,EAASC,KACzBC,MANA,0FAOK5D,KAAK6D,GAAYA,EAASC,QAC1B9D,KAAK8D,IACF,IAAIC,EAAS,IAAIC,OAAO,QACpB3E,EAAiC,IAAI4E,IACzCH,EAAKxE,IAAKV,IAAgB,IAAD,EAChBS,EAAS6E,IAAItF,EAAMuF,SAAS,GAAGC,KAChC/E,EAASgF,IAAIzF,EAAMuF,SAAS,GAAGC,GAAI,CAC/BxG,GAAIgB,EAAMuF,SAAS,GAAGC,GACtBhG,KAAMQ,EAAMuF,SAAS,GAAGG,WACxBrF,YAAa,GACbJ,OAAQ,KAGhB,IAAIK,EAAwB,IAC3BN,EAAMM,WAAa,IAAII,IAAKgE,GACzBpE,EAAUqF,KAAK,CACX3G,GAAI0F,EAAI1F,GACR4G,SAAU5F,EAAMhB,GAChBQ,KAAMkF,EAAIgB,WACVrF,YAAa,GACbwF,OAAQnB,EAAImB,OACZ3D,UAAWwC,EAAImB,OAAO9B,MAAMoB,GAC5BpD,OAAQ2C,EAAIoB,WACZC,IAAK,iBAGb,IAAI5F,EAAe,CACfnB,GAAIgB,EAAMhB,GACVoB,WAAYJ,EAAMuF,SAAS,GAAGvG,GAC9BQ,KAAMQ,EAAMgG,IACZ3F,YAAaL,EAAMiG,QAAQC,SAC3B3F,SAAS,EACT4F,YAAanG,EAAMoG,WACnB9B,MAAOtE,EAAMsE,MACbhF,MAAOU,EAAMqG,UAAUC,KACvBC,OAAQvG,EAAMwG,SACdlG,UAAWA,GAGf,OADA,UAAAG,EAASgG,IAAIzG,EAAMuF,SAAS,GAAGvG,WAA/B,SAAoCiB,OAAO0F,KAAKxF,GACzCA,IAEX2E,EAAQ4B,MAAMC,KAAKlG,EAASmG,iBC3ChD,MAAMC,EAMF/F,cAAe,KAHPgG,SAGM,OAFNC,QAEM,EACVjI,KAAKgI,IAAM,IAAInC,EACf7F,KAAKiI,GAAK,IAAIC,IAAMH,EAAgBI,SACpCnI,KAAKiI,GAAGG,QAAQ,GAAGC,OAAO,CACtB1G,SAAU,KACVR,OAAQ,KACRK,UAAW,KACX4B,UAAW,KACXkF,QAAS,OAIVC,YACH,OAAOL,IAAMM,OAAOT,EAAgBI,SAGjC7C,UAAUhC,GACb,OAAOtD,KAAKiI,GAAGQ,MAAM,WAAWC,IAAIpF,GAGjCjB,cACH,OAAOrC,KAAKiI,GAAGQ,MAAM,YAAYE,UAG9BxD,SAASjF,GACZ,OAAOF,KAAKiI,GAAGQ,MAAM,UAAUd,IAAIzH,GAGhC0I,YAAY1I,GACf,OAAOF,KAAKiI,GAAGQ,MAAM,aAAad,IAAIzH,GAInC2I,aACH,OAAO,IAAI9C,QAASC,IAChBhG,KAAKgI,IAAIlC,aAAaxD,KAAMX,IACxBA,EAASmH,QAAQjH,IACb7B,KAAKiI,GAAGQ,MAAM,UAAUM,QAAQlH,EAAEV,QAClCU,EAAEV,OAAO2H,QAAQzH,IACbrB,KAAKiI,GAAGQ,MAAM,aAAaM,QAAQ1H,EAAMG,eAGjDxB,KAAKiI,GAAGQ,MAAM,YAAYM,QAAQpH,GAClCqE,GAAQ,QAjDlB+B,EAEaI,QAAkB,UAsDtBJ,QC7Cf,MAAMiB,UAAYlJ,YAIdkC,YAAYS,GACRR,MAAMQ,GADa,KAFfL,cAEe,EAEnBpC,KAAKkC,MAAQ,CACT+G,gBAAgB,GAEpBjJ,KAAKoC,SAAW,IAAI2F,EAIjB5F,oBAQHnC,KAAKoC,SAASyG,aAAavG,KAAK,IAAMtC,KAAKuC,SAAS,CAAE0G,gBAAgB,KAInElJ,SACH,OAAKC,KAAKkC,MAAM+G,eAMZ,gBAAC,IAAD,KACI,uBAAK7I,UAAU,eACX,uBAAKA,UAAU,UACX,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAO8I,KAAK,cACR,gBAAC,EAAD,CAAW9G,SAAUpC,KAAKoC,YAE9B,gBAAC,IAAD,CAAO8G,KAAK,KACR,gBAAC,EAAD,CAAW9G,SAAUpC,KAAKoC,gBAZ1C,uBAAKhC,UAAU,QAAO,gBAAC,kBAAD,QAsBtC,MAAM+I,EAAcC,SAASC,eAAe,QAC5CtJ,iBAAO,gBAAC,EAAD,MAASoJ,K","file":"static/js/main.d7a7fc16.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Card } from 'primereact/card';\nimport { Skeleton } from 'primereact/skeleton';\nimport { Skill } from \"../model/skill\";\nimport { Link } from \"react-router-dom\";\n\n\nclass SkillCard extends React.Component<Skill, any> {\n\n    public render() {\n        if (!this.props.id) {\n            return (\n                <Card className=\"p-mr-2 p-mb-2\">\n                    <p><Skeleton shape=\"rectangle\" /></p>\n                    <p><Skeleton shape=\"rectangle\" /></p>\n                </Card>\n            )\n        }\n        return (\n            <Link to={`/skill/${this.props.id}`}>\n                <Card className=\"p-mr-2 p-mb-2\"\n                    header={<img alt=\"Card\" src={this.props.image} />}\n                    title={this.props.name}>\n                </Card>\n            </Link>\n\n        );\n    }\n}\n\nexport default SkillCard;\n","import * as React from \"react\";\nimport { Skill } from \"../model/skill\";\nimport { Subject } from \"../model/subject\";\nimport { Carousel } from \"primereact/carousel\";\nimport SkillCard from \"./skill-card\";\n\n\nconst responsiveOptions = [\n    {\n        breakpoint: '1024px',\n        numVisible: 3,\n        numScroll: 3\n    },\n    {\n        breakpoint: '768px',\n        numVisible: 2,\n        numScroll: 2\n    },\n    {\n        breakpoint: '560px',\n        numVisible: 1,\n        numScroll: 1\n    }\n];\nclass SubjectCaroussel extends React.Component<Subject, any> {\n\n    public render() {\n        return (\n            <div className=\"card\">\n                <h5>{this.props.name}</h5>\n                <Carousel\n                    responsiveOptions={responsiveOptions}\n                    numVisible={3}\n                    numScroll={1}\n                    circular={true}\n                    value={this.props.skills}\n                    itemTemplate={(skill: Skill) => <SkillCard id={skill.id} subject_id={skill.subject_id} name={skill.name} description={skill.description} exercices={skill.exercices} image={skill.image} premium={skill.premium}></SkillCard>}\n                ></Carousel>\n            </div>\n        );\n    }\n}\n\nexport default SubjectCaroussel;\n","import * as React from \"react\";\nimport { Level } from \"../model/level\";\nimport SubjectCaroussel from \"./schedule-caroussel\";\n\n\nclass LevelList extends React.Component<Level, any> {\n\n    public render() {\n        return (\n            <div className=\"p-mr-2 p-p-3 p-mb-2\">\n                <h1>{this.props.name}</h1>\n                <h2>{this.props.description}</h2>\n                <div className=\"\">\n                    {\n                        this.props.subjects.map(s => <SubjectCaroussel\n                            key={s.id}\n                            id={s.id}\n                            name={s.name}\n                            description={s.description}\n                            skills={s.skills}>\n                        </SubjectCaroussel>)\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LevelList;\n","import * as React from \"react\";\nimport LevelList from \"../component/level-list\";\nimport { Subject } from \"../model/subject\";\nimport DatabaseService from \"../service/database-service\";\n\nclass LevelPageProp {\n    constructor(public database: DatabaseService) { }\n}\nclass LevelPageModel {\n    constructor(public subjects: Subject[] = []) { }\n}\nclass LevelPage extends React.Component<LevelPageProp, LevelPageModel> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            subjects: []\n        };\n    }\n\n    public componentDidMount() {\n        this.props.database.getSubjects().then((subjects: Subject[]) => {\n            this.setState({\n                subjects\n            })\n        });\n    }\n\n    public render() {\n        return (\n            <div className=\"card\">\n                <h2>POC</h2>\n                <LevelList id=\"0\" description=\"\"\n                    name=\"Première\" subjects={this.state.subjects}></LevelList>\n            </div>\n        );\n    }\n}\n\nexport default LevelPage;\n","import * as React from \"react\";\nimport { Exercice } from \"../model/exercice\";\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\nimport 'katex/dist/katex.min.css'\nimport Latex from 'react-latex-next'\n\nclass ExericeModalProps {\n    constructor(public exercice: Exercice, public onFinish: Function) { }\n}\nclass ExericeModal extends React.Component<ExericeModalProps, any> {\n\n    constructor(prop: ExericeModalProps) {\n        super(prop);\n        this.state = {\n            started: false,\n            step: 1,\n            done: false,\n            time: 0,\n            success: false\n        }\n    }\n\n    public getContent() {\n        if (this.state.done) {\n            return this.props.exercice.answer;\n        }\n        return this.getQuestion();\n    }\n\n    public getNbStep() {\n        return this.props.exercice.questions.length - 1;\n    }\n\n    public getQuestion() {\n        let result = this.props.exercice.questions[0];\n        for (let i = 1; i <= this.state.step; i += 1) {\n            result += '<li>' + this.props.exercice.questions[i]\n        }\n        return result;\n    }\n\n    public getResponses() {\n        return [\"Reponse A\", \"Reponse B\", \"Reponse C\", \"Reponse D\"]\n    }\n\n    public finish() {\n        this.props.onFinish({\n            id: Date.now(),\n            success: true,\n            date: Date.now(),\n            exercice_id: this.props.exercice.id,\n            time: Date.now() - this.state.time\n        });\n        this.setState({\n            done: true,\n            success: true\n        });\n    }\n\n    public start() {\n        this.setState({\n            started: true,\n            time: Date.now()\n        })\n    }\n\n    public nextStep() {\n        if (this.state.step === this.getNbStep()) {\n            this.finish();\n        } else {\n            this.setState({\n                step: this.state.step + 1\n            });\n        }\n    }\n\n    public close() {\n        this.setState({\n            done: false,\n            step: 1,\n            started: false\n        })\n    }\n\n    public getFooter() {\n        if (!this.state.done) {\n            return <div>\n                {\n                    this.getResponses().map((value, index) =>\n                        <Button key={index} label={value} onClick={() => this.nextStep()} className=\"p-button-text\" />\n                    )\n                }\n            </div>\n        }\n        return <div>\n            <Button label=\"C'est compris\" icon=\"pi pi-check\" onClick={() => this.close()} autoFocus />\n        </div>\n    }\n\n    public render() {\n        return (\n            <div className=\"card\">\n                <Button label={this.props.exercice.name} icon=\"pi pi-external-link\" onClick={() => this.start()} />\n                <Dialog header={this.props.exercice.name} visible={this.state.started} style={{ width: '50vw' }} footer={this.getFooter()} onHide={() => this.close()}>\n                    <Latex>{this.getContent()}</Latex>\n                </Dialog>\n            </div >\n\n        );\n    }\n}\n\nexport default ExericeModal;\n","import * as React from \"react\";\nimport { Skill } from \"../model/skill\";\nimport ExericeModal from \"../component/exercice-modal\";\nimport YouTube from 'react-youtube';\nimport DatabaseService from \"../service/database-service\";\nimport { Result } from \"../model/result\";\nimport { Divider } from 'primereact/divider';\n\nclass SkillPageProp {\n    constructor(public database: DatabaseService) { }\n}\nclass SkillPageModel {\n    constructor(public skill: Skill) { }\n}\nclass SkillPage extends React.Component<SkillPageProp, SkillPageModel> {\n\n    constructor(prop: any) {\n        super(prop);\n        this.state = {\n            skill: {\n                id: \"\",\n                name: \"\",\n                description: \"\",\n                subject_id: \"\",\n                exercices: []\n            }\n        }\n    }\n\n\n    public componentDidMount() {\n        let id = +(window.location.href.split('/').pop() || '8329');\n        this.props.database.getSkill(id).then((skill: Skill) => {\n            this.setState({\n                skill\n            })\n        });\n    }\n\n    public getVideoId(link?: string) {\n        if (link) {\n            return link.split('/').pop();\n        }\n        return '';\n    }\n\n    public addResult(result: Result) {\n        this.props.database.addResult(result);\n    }\n\n    public render() {\n        return (\n            <div className=\"card\">\n                <h2>{this.state.skill?.name}</h2>\n                <div className=\"p-d-flex\">\n                    <YouTube\n                        videoId={this.getVideoId(this.state.skill.video)}\n                    />\n\n                    <Divider layout=\"vertical\" />\n                    <div\n                        dangerouslySetInnerHTML={{\n                            __html: this.state.skill.description\n                        }}></div>\n                </div>\n                <h2>Exercice</h2>\n                {\n                    this.state.skill.exercices.map((exo, value) =>\n                        <ExericeModal key={value} exercice={exo} onFinish={(result: Result) => (this.addResult(result))} />\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default SkillPage;\n","import { Skill } from \"../model/skill\";\nimport { Exercice } from \"../model/exercice\";\nimport { Subject } from \"../model/subject\";\n\nconst URL = 'https://cours-galilee.com/wp-json/wp/v2/comptence?per_page=100&orderby=title&order=asc';\n\nclass ServiceAPI {\n\n    public getSubject(): Promise<Subject[]> {\n        return new Promise((resolve, reject) => {\n            fetch(URL)\n                .then(response => response.json())\n                .then(json => {\n                    var regexp = new RegExp('<li>');\n                    var subjects: Map<number, Subject> = new Map();\n                    json.map((value: any) => {\n                        if (!subjects.has(value.chapitre[0].ID)) {\n                            subjects.set(value.chapitre[0].ID, {\n                                id: value.chapitre[0].ID,\n                                name: value.chapitre[0].post_title,\n                                description: \"\",\n                                skills: []\n                            });\n                        }\n                        let exercices: Exercice[] = [];\n                        (value.exercices || []).map((exo: any) =>\n                            exercices.push({\n                                id: exo.id,\n                                skill_id: value.id,\n                                name: exo.post_title,\n                                description: \"\",\n                                enonce: exo.enonce,\n                                questions: exo.enonce.split(regexp),\n                                answer: exo.correction,\n                                tip: \"demerde-toi\"\n                            })\n                        );\n                        let skill: Skill = {\n                            id: value.id,\n                            subject_id: value.chapitre[0].id,\n                            name: value.nom,\n                            description: value.content.rendered,\n                            premium: false,\n                            difficulty: +value.difficulte,\n                            video: value.video,\n                            image: value.thumbnail.guid,\n                            order: +value.ordering,\n                            exercices: exercices,\n                        };\n                        subjects.get(value.chapitre[0].id)?.skills.push(skill);\n                        return skill;\n                    });\n                    resolve(Array.from(subjects.values()));\n                });\n        });\n    }\n}\n\nexport default ServiceAPI;","import Dexie from 'dexie';\nimport ServiceAPI from './service-api';\nimport { Result } from '../model/result';\nimport { Subject } from '../model/subject';\nimport { Skill } from '../model/skill';\nimport { Exercice } from '../model/exercice';\n\n\n\nclass DatabaseService {\n\n    private static DB_NAME: string = 'galileo';\n    private api: ServiceAPI;\n    private db: Dexie;\n\n    constructor() {\n        this.api = new ServiceAPI();\n        this.db = new Dexie(DatabaseService.DB_NAME);\n        this.db.version(1).stores({\n            subjects: 'id',\n            skills: 'id',\n            exercices: 'id',\n            questions: 'id',\n            results: 'id',\n        });\n    }\n\n    public isCreated(): Promise<Boolean> {\n        return Dexie.exists(DatabaseService.DB_NAME);\n    }\n\n    public addResult(result: Result): Promise<any> {\n        return this.db.table(\"results\").add(result);\n    }\n\n    public getSubjects(): Promise<Subject[]> {\n        return this.db.table(\"subjects\").toArray();\n    }\n\n    public getSkill(id: number): Promise<Skill> {\n        return this.db.table(\"skills\").get(id);\n    }\n\n    public getExercice(id: number): Promise<Exercice> {\n        return this.db.table(\"exercices\").get(id);\n    }\n\n\n    public initialize(): Promise<Boolean> {\n        return new Promise((resolve) => {\n            this.api.getSubject().then((subjects) => {\n                subjects.forEach(s => {\n                    this.db.table(\"skills\").bulkPut(s.skills)\n                    s.skills.forEach(skill => {\n                        this.db.table(\"exercices\").bulkPut(skill.exercices);\n                    })\n                })\n                this.db.table(\"subjects\").bulkPut(subjects);\n                resolve(true);\n            });\n        });\n    }\n\n}\n\nexport default DatabaseService;","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\nimport \"./styles.css\";\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport LevelPage from \"./page/level-page\";\nimport SkillPage from \"./page/skill-page\";\nimport DatabaseService from \"./service/database-service\";\n\nclass AppState {\n    constructor(public databaseLoaded: boolean = false) { }\n}\nclass App extends React.Component<any, AppState> {\n\n    private database: DatabaseService;\n\n    constructor(prop: any) {\n        super(prop);\n        this.state = {\n            databaseLoaded: false\n        };\n        this.database = new DatabaseService();\n    }\n\n\n    public componentDidMount() {\n        /*this.database.isCreated().then(value => {\n            if (!value) {\n                this.database.initialize().then(() => this.setState({ databaseLoaded: true }));\n            } else {\n                this.setState({ databaseLoaded: true });\n            }\n        });*/\n        this.database.initialize().then(() => this.setState({ databaseLoaded: true }));\n\n    }\n\n    public render() {\n        if (!this.state.databaseLoaded) {\n            return (\n                <div className=\"card\"><ProgressSpinner /></div>\n            );\n        }\n        return (\n            <Router>\n                <div className=\"p-component\">\n                    <div className=\"p-mr-2\">\n                        <Switch>\n                            <Route path=\"/skill/:id\">\n                                <SkillPage database={this.database} />\n                            </Route>\n                            <Route path=\"/\">\n                                <LevelPage database={this.database} />\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}