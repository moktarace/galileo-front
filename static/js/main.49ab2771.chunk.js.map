{"version":3,"sources":["component/skill-card.tsx","component/subject-caroussel.tsx","component/level-list.tsx","page/level-page.tsx","component/video.tsx","page/skill-page.tsx","service/service-api.ts","service/database-service.ts","page/exercice-page.tsx","index.tsx"],"names":["SkillCard","React","getDifficulty","className","1","2","3","0","this","props","difficulty","render","to","id","alt","src","image","name","SubjectCaroussel","uk-grid","skills","map","skill","key","video","subject_id","description","exercices","premium","LevelList","subjects","s","LevelPage","constructor","super","state","componentDidMount","database","getSubjects","then","setState","Video","getVideoId","link","split","pop","getVideoLink","width","height","uk-responsive","SkillPage","prop","recommanded","window","location","href","getSkill","getRecommandedSkills","addResult","result","dangerouslySetInnerHTML","__html","exo","ServiceAPI","getSubject","Promise","resolve","reject","fetch","response","json","regexp","RegExp","Map","value","has","chapitre","ID","set","post_title","push","skill_id","enonce","questions","replaceAll","answer","correction","tip","nom","content","rendered","difficulte","thumbnail","guid","order","ordering","get","Array","from","values","DatabaseService","api","db","Dexie","DB_NAME","version","stores","results","isCreated","exists","table","add","toArray","where","filter","limit","sortBy","getExercice","initialize","forEach","bulkPut","ExercicePage","exercice","step","done","time","success","Date","now","getNbStep","Math","max","length","getPreQuestion","getQuestions","slice","getResponses","finish","date","exercice_id","nextStep","getFooter","type","r","i","onClick","q","App","databaseLoaded","uk-sticky","uk-navbar","path","uk-spinner","rootElement","document","getElementById"],"mappings":"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","file":"static/js/main.49ab2771.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Skill } from \"../model/skill\";\nimport { Link } from \"react-router-dom\";\n\n\nclass SkillCard extends React.Component<Skill, any> {\n\n    public getDifficulty() {\n        const label: any = {\n            1: 'DÃ©butant',\n            2: 'Intermediaire',\n            3: 'Difficile',\n            0: ''\n        }\n        return < div className=\"uk-card-badge uk-label\" > {label[this.props.difficulty]}</div>\n    }\n\n    public render() {\n        return (\n            <Link to={`/skill/${this.props.id}`}>\n                <div className=\"uk-card uk-card-hover uk-card-default\">\n                    <div className=\"uk-card-media-top\">\n                        <img alt=\"Card\" src={this.props.image} />\n                    </div>\n                    <div className=\"uk-card-body\">\n                        <h3 className=\"uk-card-title\">{this.props.name}</h3>\n                        {this.getDifficulty()}\n                    </div>\n                </div>\n            </Link>\n\n        );\n    }\n}\n\nexport default SkillCard;\n","import * as React from \"react\";\nimport { Skill } from \"../model/skill\";\nimport { Subject } from \"../model/subject\";\nimport SkillCard from \"./skill-card\";\n\n\nclass SubjectCaroussel extends React.Component<Subject, any> {\n\n    public render() {\n        return (\n            <div className=\"uk-padding\">\n                <h2>{this.props.name}</h2>\n                <div className=\"uk-child-width-1-3@m uk-grid-small uk-grid-match\" uk-grid=\"true\">\n                    {\n                        (this.props.skills.map((skill: Skill) => <SkillCard key={skill.id} video={skill.video} id={skill.id} subject_id={skill.subject_id} name={skill.name} description={skill.description} exercices={skill.exercices} image={skill.image} difficulty={skill.difficulty} premium={skill.premium}></SkillCard>))\n                    }\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default SubjectCaroussel;\n","import * as React from \"react\";\nimport { Level } from \"../model/level\";\nimport SubjectCaroussel from \"./subject-caroussel\";\n\n\nclass LevelList extends React.Component<Level, any> {\n\n    public render() {\n        return (\n            <div className=\"\">\n                <h1>LeÃ§ons</h1>\n                {\n                    this.props.subjects.map(s => <SubjectCaroussel\n                        key={s.id}\n                        id={s.id}\n                        name={s.name}\n                        description={s.description}\n                        skills={s.skills}>\n                    </SubjectCaroussel>)\n                }\n            </div>\n        );\n    }\n}\n\nexport default LevelList;\n","import * as React from \"react\";\nimport LevelList from \"../component/level-list\";\nimport { Subject } from \"../model/subject\";\nimport DatabaseService from \"../service/database-service\";\n\nclass LevelPageProp {\n    constructor(public database: DatabaseService) { }\n}\nclass LevelPageModel {\n    constructor(public subjects: Subject[] = []) { }\n}\nclass LevelPage extends React.Component<LevelPageProp, LevelPageModel> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            subjects: []\n        };\n    }\n\n    public componentDidMount() {\n        this.props.database.getSubjects().then((subjects: Subject[]) => {\n            this.setState({\n                subjects\n            })\n        });\n    }\n\n    public render() {\n        return (\n            <LevelList id=\"0\" description=\"\"\n                name=\"PremiÃ¨re\" subjects={this.state.subjects}></LevelList>\n        );\n    }\n}\n\nexport default LevelPage;\n","import * as React from \"react\";\n\nclass VideoProps {\n    constructor(public link: string) { }\n}\nclass Video extends React.Component<VideoProps, any> {\n\n    public getVideoId() {\n        if (this.props.link) {\n            return this.props.link.split('/').pop();\n        }\n        return '';\n    }\n\n    public getVideoLink() {\n        return 'https://www.youtube-nocookie.com/embed/'\n            + this.getVideoId()\n            + '?autoplay=0&amp;showinfo=0&amp;rel=0&amp;modestbranding=1&amp;playsinline=1';\n    }\n\n    public render() {\n        return <iframe src={this.getVideoLink()} width=\"1920\" height=\"1080\" uk-responsive=\"true\"></iframe>;\n    }\n}\n\nexport default Video;\n","import * as React from \"react\";\nimport { Skill } from \"../model/skill\";\nimport DatabaseService from \"../service/database-service\";\nimport { Result } from \"../model/result\";\nimport SkillCard from \"../component/skill-card\";\nimport { Link } from \"react-router-dom\";\nimport Video from \"../component/video\";\n\nclass SkillPageProp {\n    constructor(public database: DatabaseService) { }\n}\nclass SkillPageModel {\n    constructor(public skill: Skill, public recommanded: Skill[]) { }\n}\nclass SkillPage extends React.Component<SkillPageProp, SkillPageModel> {\n\n    constructor(prop: any) {\n        super(prop);\n        this.state = {\n            skill: {\n                id: \"\",\n                name: \"\",\n                description: \"\",\n                difficulty: 1,\n                subject_id: \"\",\n                video: \"\",\n                exercices: []\n            },\n            recommanded: []\n        }\n    }\n\n    public componentDidMount() {\n        const id = +(window.location.href.split('/').pop() || '8329');\n        this.props.database.getSkill(id).then((skill: Skill) => {\n            this.props.database.getRecommandedSkills(skill).then((recommanded: Skill[]) => {\n                this.setState({\n                    recommanded\n                })\n            });\n            this.setState({\n                skill\n            })\n        });\n    }\n\n\n    public addResult(result: Result) {\n        this.props.database.addResult(result);\n    }\n\n    public render() {\n        return (\n            <article className=\"uk-article\">\n                <h1 className=\"uk-article-title\">{this.state.skill?.name}</h1>\n                <h2>Cours</h2>\n                <div className=\"uk-panel\">\n                    <div className=\"uk-align-left uk-margin-remove-adjacent\">\n                        <Video link={this.state.skill.video} />\n                    </div>\n                    <p dangerouslySetInnerHTML={{\n                        __html: this.state.skill.description\n                    }}></p>\n                </div>\n                <hr className=\"uk-divider-icon\" />\n                <h2>Exercices</h2>\n                <ul className=\"uk-list\">\n                    {\n                        this.state.skill.exercices.map(exo =>\n                            <li><Link key={exo.id} className=\"\" to={'/exercice/' + exo.id}>{exo.name}</Link></li>)\n                    }\n                </ul>\n                <hr className=\"uk-divider-icon\" />\n                <h2>CompÃ©tances recommandÃ©es</h2>\n                <div className=\"uk-child-width-1-3@m uk-grid-small uk-grid-match\" uk-grid=\"true\">\n                    {\n                        (this.state.recommanded.map((skill: Skill) => <SkillCard video={skill.video} key={skill.id} id={skill.id} subject_id={skill.subject_id} name={skill.name} description={skill.description} exercices={skill.exercices} image={skill.image} difficulty={skill.difficulty} premium={skill.premium}></SkillCard>))\n                    }\n                </div>\n            </article>\n        );\n    }\n}\n\nexport default SkillPage;\n","import { Skill } from \"../model/skill\";\nimport { Exercice } from \"../model/exercice\";\nimport { Subject } from \"../model/subject\";\n\nconst URL = 'https://cours-galilee.com/wp-json/wp/v2/comptence?per_page=100&orderby=title&order=asc';\n\nclass ServiceAPI {\n\n    public getSubject(): Promise<Subject[]> {\n        return new Promise((resolve, reject) => {\n            fetch(URL)\n                .then(response => response.json())\n                .then(json => {\n                    var regexp = new RegExp('<li>');\n                    var subjects: Map<number, Subject> = new Map();\n                    json.map((value: any) => {\n                        if (!subjects.has(value.chapitre[0].ID)) {\n                            subjects.set(value.chapitre[0].ID, {\n                                id: value.chapitre[0].ID,\n                                name: value.chapitre[0].post_title,\n                                description: \"\",\n                                skills: []\n                            });\n                        }\n                        let exercices: Exercice[] = [];\n                        (value.exercices || []).map((exo: any) =>\n                            exercices.push({\n                                id: exo.id,\n                                skill_id: value.id,\n                                name: exo.post_title,\n                                description: \"\",\n                                enonce: exo.enonce,\n                                questions: exo.enonce.replaceAll('</li>', '').split(regexp) || [],\n                                answer: exo.correction,\n                                tip: \"demerde-toi\"\n                            })\n                        );\n                        let skill: Skill = {\n                            id: value.id,\n                            subject_id: value.chapitre[0].id,\n                            name: value.nom,\n                            description: value.content.rendered,\n                            premium: false,\n                            difficulty: +value.difficulte,\n                            video: value.video,\n                            image: value.thumbnail.guid,\n                            order: +value.ordering,\n                            exercices: exercices,\n                        };\n                        subjects.get(value.chapitre[0].id)?.skills.push(skill);\n                        return skill;\n                    });\n                    resolve(Array.from(subjects.values()));\n                });\n        });\n    }\n}\n\nexport default ServiceAPI;","import Dexie from 'dexie';\nimport ServiceAPI from './service-api';\nimport { Result } from '../model/result';\nimport { Subject } from '../model/subject';\nimport { Skill } from '../model/skill';\nimport { Exercice } from '../model/exercice';\n\n\n\nclass DatabaseService {\n\n    private static DB_NAME: string = 'galileo';\n    private api: ServiceAPI;\n    private db: Dexie;\n\n    constructor() {\n        this.api = new ServiceAPI();\n        this.db = new Dexie(DatabaseService.DB_NAME);\n        this.db.version(1).stores({\n            subjects: 'id',\n            skills: 'id, subject_id',\n            exercices: 'id',\n            questions: 'id',\n            results: 'id',\n        });\n    }\n\n    public isCreated(): Promise<boolean> {\n        return Dexie.exists(DatabaseService.DB_NAME);\n    }\n\n    public addResult(result: Result): Promise<any> {\n        return this.db.table(\"results\").add(result);\n    }\n\n    public getSubjects(): Promise<Subject[]> {\n        return this.db.table(\"subjects\").toArray();\n    }\n\n    public getRecommandedSkills(skill: Skill): Promise<Skill[]> {\n        return this.db.table(\"skills\")\n            .where({ subject_id: skill.subject_id })\n            .filter(s => s.id !== skill.id)\n            .limit(3)\n            .sortBy('difficulty');\n    }\n\n    public getSkill(id: number): Promise<Skill> {\n        return this.db.table(\"skills\").get(id);\n    }\n\n    public getExercice(id: number): Promise<Exercice> {\n        return this.db.table(\"exercices\").get(id);\n    }\n\n\n    public initialize(): Promise<boolean> {\n        return new Promise((resolve) => {\n            this.api.getSubject().then((subjects) => {\n                subjects.forEach(s => {\n                    this.db.table(\"skills\").bulkPut(s.skills)\n                    s.skills.forEach(skill => {\n                        this.db.table(\"exercices\").bulkPut(skill.exercices);\n                    })\n                })\n                this.db.table(\"subjects\").bulkPut(subjects);\n                resolve(true);\n            });\n        });\n    }\n\n}\n\nexport default DatabaseService;","import * as React from \"react\";\nimport DatabaseService from \"../service/database-service\";\nimport { Result } from \"../model/result\";\nimport { Exercice } from \"../model/exercice\";\nimport 'katex/dist/katex.min.css';\nimport Latex from 'react-latex-next';\nimport { Link } from \"react-router-dom\";\n\nclass ExercicePageProp {\n    constructor(public database: DatabaseService) { }\n}\nclass ExercicePageModel {\n    public done?: boolean;\n    public success?: boolean;\n\n    constructor(public exercice: Exercice, public time: number, public step: number) { }\n}\nclass ExercicePage extends React.Component<ExercicePageProp, ExercicePageModel> {\n\n    constructor(prop: any) {\n        super(prop);\n        this.state = {\n            exercice: {\n                id: '',\n                skill_id: '',\n                questions: [],\n                answer: '',\n                enonce: '',\n                tip: '',\n                name: '',\n                description: '',\n            },\n            step: 0,\n            done: false,\n            time: 0,\n            success: false\n        }\n    }\n\n    public componentDidMount() {\n        const id = +(window.location.href.split('/').pop() || '8329');\n        this.props.database.getExercice(id).then((exercice: Exercice) => {\n            this.setState({\n                exercice,\n                time: Date.now()\n            })\n        });\n    }\n\n\n    public getNbStep(): number {\n        return Math.max(this.state.exercice.questions.length - 1, 1);\n    }\n\n    public getPreQuestion(): string {\n        if (this.state.exercice.questions.length === 0) {\n            return '';\n        }\n        return this.state.exercice.questions[0];\n    }\n\n\n    public getQuestions(): string[] {\n        if (this.state.exercice.questions.length === 0) {\n            return [];\n        }\n        return this.state.exercice.questions.slice(0, this.state.step + 1);\n    }\n\n    public getResponses() {\n        return [\"Reponse A\", \"Reponse B\", \"Reponse C\", \"Reponse D\"]\n    }\n\n    public finish() {\n        const result: Result = ({\n            id: Date.now(),\n            success: true,\n            date: Date.now(),\n            exercice_id: this.state.exercice.id,\n            time: Date.now() - this.state.time\n        });\n        this.props.database.addResult(result);\n        this.setState({\n            done: true,\n            success: true\n        });\n    }\n\n    public nextStep() {\n        if (this.state.step === this.getNbStep()) {\n            this.finish();\n        } else {\n            this.setState({\n                step: this.state.step + 1\n            });\n        }\n    }\n\n    public getFooter() {\n        if (!this.state.done) {\n            return <div>\n                {\n                    this.getResponses().map((r, i) =>\n                        <button key={i} onClick={() => this.nextStep()}\n                            className=\"uk-button uk-button-default uk-width-1-1 uk-margin-small-bottom\"> {r}</button>)\n                }\n            </div>\n        }\n        return <Link to={'/skill/' + this.state.exercice.skill_id} type=\"button\" className=\"uk-button uk-button-primary\">C'est compris</Link>\n    }\n\n    public render() {\n        return (\n            <article className=\"uk-article\">\n                <h1 className=\"uk-article-title\">{this.state.exercice.name}</h1>\n                <h2>EnoncÃ©</h2>\n                <div className=\"uk-panel\">\n                    <Latex>{this.getPreQuestion()}</Latex>\n                </div>\n                <hr className=\"uk-divider-icon\" />\n                <h2>Questions</h2>\n                <div className=\"uk-panel\">\n                    <ul className=\"uk-list uk-list-decimal\">\n                        {\n                            this.getQuestions().map((q, i) => <li key={i}><Latex>{q}</Latex></li>)\n                        }\n                    </ul>\n                </div>\n                <hr className=\"uk-divider-icon\" />\n                {\n                    this.state.done && <div>\n                        <h2>Correction</h2>\n                        <div className=\"uk-panel\">\n                            <Latex>{this.state.exercice.answer}</Latex>\n                        </div>\n                        <hr className=\"uk-divider-icon\" />\n                    </div>\n                }\n                {this.getFooter()}\n            </article >\n        );\n    }\n}\n\nexport default ExercicePage;\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link,\n} from \"react-router-dom\";\nimport \"./styles.css\";\nimport LevelPage from \"./page/level-page\";\nimport SkillPage from \"./page/skill-page\";\nimport DatabaseService from \"./service/database-service\";\nimport ExercicePage from \"./page/exercice-page\";\n\nclass AppState {\n    constructor(public databaseLoaded: boolean = false) { }\n}\nclass App extends React.Component<any, AppState> {\n\n    private database: DatabaseService;\n\n    constructor(prop: any) {\n        super(prop);\n        this.state = {\n            databaseLoaded: false\n        };\n        this.database = new DatabaseService();\n    }\n\n\n    public componentDidMount() {\n        /*this.database.isCreated().then(value => {\n            if (!value) {\n                this.database.initialize().then(() => this.setState({ databaseLoaded: true }));\n            } else {\n                this.setState({ databaseLoaded: true });\n            }\n        });*/\n        this.database.initialize().then(() => this.setState({ databaseLoaded: true }));\n\n    }\n\n    public render() {\n        if (!this.state.databaseLoaded) {\n            return (\n                <div className=\"uk-container uk-padding uk-container-large\">\n                    <div uk-spinner=\"true\"></div>\n                </div>\n            );\n        }\n        return (\n            <Router>\n                <div uk-sticky=\"sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky\">\n                    <div className=\"uk-navbar-container\" uk-navbar=\"true\">\n                        <div className=\"uk-navbar-center\">\n                            <Link to=\"/\" className=\"uk-navbar-item uk-logo\">Galileo POC</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"uk-container uk-padding uk-container-large\">\n                    <Switch>\n                        <Route path=\"/skill/:id\">\n                            <SkillPage database={this.database} />\n                        </Route>\n                        <Route path=\"/exercice/:id\">\n                            <ExercicePage database={this.database} />\n                        </Route>\n                        <Route path=\"/\">\n                            <LevelPage database={this.database} />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}